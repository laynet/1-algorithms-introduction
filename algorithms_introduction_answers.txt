1. Using proper pseudo-code, describe the following primitive algorithms:

Making coffee;
function kettle 
    if kettle is full
        return kettle
        else
        fill kettle 
    heat kettle

        while kettle 
            add coffee + french press

    end while 
    end if 

    function frenchPress
        add kettle.content to french press
        wait 10 minutes 
        press coffee



Washing dishes;

function wash
    if dishes  = dirty
        wash(dish)
    else
        return dish

function wash(dish)
    while water is running 
    soap + sponge + dish
    return dish

  

A choice of your own - cleaning litter box
    function scoopPoop
    while litter box = full 
        sort poop from litter
        return to litter genie
    

2. As with the knot algorithm, there may be more than one way to solve the problem. It is essential to try to pick the best algorithm for a situation. Name three companies who created an algorithm that made them successful, e.g., Google's search algorithm. It doesn't need to be a tech example (such as a recipe or manufacturing a product). Google's algorithm produces more relevant results than other search engines; what about each of your cases make them stand out?
    uber's dispatch algorithm - I guess it's not that cool now because lyft does the same thing but when it came out it was cool because it did live dispatching from wherever the driver was and not from a hub
    grindr - stands out because unlike other dating apps, it shows you how close a person is by feet, which is honesly creepy, but it definitely stands out
    spotify - they stand out from other streaming services because they make playlists for you based on your listening history and unlike pandora's similar algorithm, you can pick specific songs and not just stations
3. Hypothesize about what constitutes an efficient algorithm versus an inefficient algorithm.
    an efficient algorithm would be one that balances time and cost ans would ideally be effective. An inefficient algorithm would be one that is slow and/or expensive regardless of effectiveness.


